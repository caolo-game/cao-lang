name: Cao-Lang publish

on:
  push:
    tags: "*"

jobs:
  publish-cratesio:
    name: Publish cao-lang to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true

      - name: Publish
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          path: "./cao-lang"

  publish-pypi-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Setup CPython"
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.9

      - name: "Setup PyPy37"
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 'pypy-3.7'

      - name: "Setup PyPy38"
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 'pypy-3.8'

      - name: "Install deps"
        run: |
          python -m pip install --upgrade pip twine
          docker pull quay.io/pypa/manylinux2014_x86_64

      - name: "Build distributions"
        run: |
          docker run --rm -v `pwd`:/cao-lang quay.io/pypa/manylinux2014_x86_64 bash /cao-lang/ci/build-wheels.sh
          ls -al dist/

      # only upload on tags
      - name: "Upload"
        run: twine upload --skip-existing --verbose dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_NON_INTERACTIVE: 1

  publish-pypi:
    strategy:
      matrix:
        python: ["3.9", "pypy-3.7", "pypy-3.8"]
        os: ["windows-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: "Setup Python ${{matrix.python}}"
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{matrix.python}}

      - name: "Install build dependencies"
        run: pip install build twine

      - name: "Build distributions"
        run: |
          python -m build --sdist --wheel

      # only upload on tags
      - name: "Upload"
        run: twine upload --skip-existing --verbose dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_NON_INTERACTIVE: 1
