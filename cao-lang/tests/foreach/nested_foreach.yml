submodules: []
imports: []
lanes:
  - - main
    - arguments: []
      cards:
        # --- init the example table ---
        # {
        #  f1: 3,
        #  f2: 5,
        #  f3: 7,
        # }
        - !CreateTable
        - !SetVar t
        - !ScalarInt 3
        - !ReadVar t
        - !StringLiteral f1
        - !SetProperty
        - !ScalarInt 5
        - !ReadVar t
        - !StringLiteral f2
        - !SetProperty
        - !ScalarInt 7
        - !ReadVar t
        - !StringLiteral f3
        - !SetProperty # set result and g_iters to zero


        - !ScalarInt 0
        - !SetGlobalVar g_result
        - !ScalarInt 0
        - !SetGlobalVar g_iters
        # --- init done ---
        - !ForEach
          k: key
          body: !CompositeCard
            name: ""
            ty: ""
            cards:
              - !ReadVar t
              - !ReadVar key
              - !Jump outer_loop
          iterable: !ReadVar t

  - - outer_loop
    - arguments:
        - "key"
        - "table"
      cards:
        - !ForEach
          k: key
          body: !CompositeCard
            name: ""
            ty: ""
            cards:
              - !ReadVar key
              - !ReadVar table
              - !Jump inner_loop
          iterable: !ReadVar table

  - - inner_loop
    - arguments:
        - "key"
        - "table"
      cards:
        # get table[key]
        - !ReadVar key
        - !ReadVar table
        - !GetProperty # add table[key] to g_result


        - !ReadVar g_result
        - !Add
        - !SetGlobalVar g_result
          # add 1 to g_iters
        - !ScalarInt 1
        - !ReadVar g_iters
        - !Add
        - !SetGlobalVar g_iters
