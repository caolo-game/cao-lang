name: Run Cao-Lang tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash
    working-directory: cao-lang

jobs:
  test:
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
        include:
          - toolchain: nightly
            flags: "-Zinstrument-coverage"

    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Install grcov deps
        if: ${{ matrix.toolchain == 'nightly' }}
        run: |
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
          rustup component add llvm-tools-preview

      - name: Run cargo test
        run: |
          cargo build
          cargo test --tests --benches
          cargo test --doc
        env:
          RUST_BACKTRACE: 1
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: ${{ matrix.flags }}
          RUSTDOCFLAGS: "-Cpanic=abort"
          LLVM_PROFILE_FILE: cao_lang-%p-%m.profraw

      - name: Generate coverage report
        if: ${{ matrix.toolchain == 'nightly' }}
        run: |
          ./grcov . --binary-path ../target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Coveralls
        if: ${{ matrix.toolchain == 'nightly' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./cao-lang/lcov.info

  clippy_check:
    needs: [test]
    runs-on: ubuntu-latest
    name: Clippy check
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --manifest-path cao-lang/Cargo.toml
